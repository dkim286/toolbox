#!/bin/sh
# uhh
# Shows a list of available toolbox scripts

readonly SCRIPT=$(basename "$0")
readonly ARGS="$@"

SHOW_ALL=0
TREE=0
DIR=''

function check_env() {
  if [ -z "$TOOLBOX" ]; then
    echo "$SCRIPT: \$TOOLBOX not defined"
    exit 1
  fi
}

function usage() {
  cat <<- EOF
Usage: $SCRIPT [CATEGORY] [OPTION]
Show all scripts belonging to CATEGORY.

OPTIONS
  -t, --tree   show everything using 'tree' instead
  -h, --help   display this help and exit

EXAMPLES
  List all available categories:
    $SCRIPT
  List all scripts under 'util' category:
    $SCRIPT util
  List a tree of scripts:
    $SCRIPT -t

EOF
}

function handle_args() {
  local opts=ht
  local lopts=help,tree
  local args
  if ! args=$(getopt --options=$opts \
                     --longoptions=$lopts \
                     --name "$SCRIPT" \
                     -- "$@"); then
    exit 1
  fi

  eval set -- "$args"
  while true; do
    case "$1" in
      -h|--help)
        usage
        shift 1
        exit 0
        ;;
      -t|--tree)
        TREE=1
        shift 1
        ;;
      --)
        shift 1
        break
        ;;
      *)
        echo "critical error"
        break
        ;;
    esac
  done
  
  if [ $# -eq 0 ]; then
    SHOW_ALL=1
    return 0
  fi
  
  DIR="$TOOLBOX/$1"
  if [ ! -e "$DIR" ] || [ ! -d "$DIR" ]; then
    echo "$SCRIPT: error finding '$DIR'"
    exit 1
  fi
}

function print_tree() {
  basename "$1"
  tree -I "uhh-completion.bash" --prune "$1" | head -n-1 | tail -n+2
}

function print_root() {
  pushd "$TOOLBOX" > /dev/null
  for folder in $TOOLBOX/*; do
    if [ ! -d "$folder" ]; then 
      continue
    fi
    if [ -n "$(ls -A $folder)" ]; then
      pushd $folder > /dev/null
      count=$(ls | wc -l)
      echo "$(basename $folder) ($count)"
      popd > /dev/null
    fi
  done
  popd > /dev/null
}

function print_category() {
  pushd "$DIR" > /dev/null
  for file in * ; do
    if [ -x "$file" ]; then
      printf "$(basename $DIR)/"
      tput bold
      sed -n '2,2p' < "$file" | cut -d'#' -f2 | sed 's/ //'
      tput sgr0
      printf "    "
      sed -n '3,3p' < "$file" | cut -d'#' -f2 | sed 's/ //'
    fi
  done
  popd > /dev/null
}


function main() {
  check_env
  handle_args $ARGS

  if [ $SHOW_ALL -eq 1 ]; then
    if [ $TREE -eq 1 ]; then
      print_tree "$TOOLBOX"
    else
      print_root
    fi
  else
    if [ $TREE -eq 1 ]; then
      print_tree "$DIR"
    else
      print_category
    fi
  fi

  exit 0
}
main

